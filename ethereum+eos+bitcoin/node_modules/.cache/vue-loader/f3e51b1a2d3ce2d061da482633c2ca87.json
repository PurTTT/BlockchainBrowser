{"remainingRequest":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vicky/Downloads/以太坊+eos+比特币/src/components/etheBlocks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/src/components/etheBlocks.vue","mtime":1653550914000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Web3 from 'web3';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '以太坊最新区块',\r\n      name:'etheBlocks',\r\n      blocks: [],\r\n      txs: [],\r\n      timmer: null,\r\n      loading: true\r\n    };\r\n  },\r\n  created() {\r\n    if (typeof window.web3 !== 'undefined') {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      const ethNodeUrl = new Web3.providers.HttpProvider('http://localhost:8545'); // TODO: remote URL\r\n      window.web3 = new Web3(ethNodeUrl);\r\n      console.log(window.web3);\r\n    }\r\n\r\n    // const { eth } = window.web3;\r\n\r\n    // eth.getBlockNumber().then(function(resolve) {\r\n    //   console.log(`getBlockNumber:${resolve}`);\r\n    // });\r\n\r\n    // eth.getAccounts().then(function(resolve) {\r\n    //   console.log(`getAccounts:${resolve}`);\r\n    // });\r\n\r\n    // eth\r\n    //   .getTransactionCount('0x7900681181e87B926A279769538f5325088eAdc1')\r\n    //   .then(function(resolve) {\r\n    //     console.log(`getTransactionCount:${resolve}`);\r\n    //   });\r\n\r\n    // eth.getCoinbase().then(function(resolve) {\r\n    //   console.log(`getCoinbase:${resolve}`);\r\n    // });\r\n\r\n    this.refreshData();\r\n    this.timmer = setInterval(() => {\r\n      this.refreshData();\r\n    }, 60000);\r\n  },\r\n  methods: {\r\n    refreshData(){\r\n      try {\r\n        this.printBlocksAndTxs();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async getBlocksAndTxs() {\r\n      const { eth } = window.web3;\r\n      const blockNumber = await eth.getBlockNumber();\r\n      const blocks = [];\r\n      let txs = [];\r\n\r\n      for (let i = 1; i <= 15; i++) {\r\n        const block = await eth.getBlock(blockNumber-i);\r\n\r\n        block.timestamp = this.$filters.difference(block.timestamp);\r\n        block.txn = block.transactions.length;\r\n\r\n        blocks.push(block);\r\n        txs = txs.concat(block.transactions);\r\n      }\r\n\r\n      return {\r\n        blocks,\r\n        txs\r\n      };\r\n    },\r\n\r\n    async printBlocksAndTxs() {\r\n      const { eth } = window.web3;\r\n      const result = await this.getBlocksAndTxs();\r\n\r\n      const txs = result.txs;\r\n      const handledTxs = [];\r\n\r\n      let len = result.txs.length;\r\n      if (len) {\r\n        for (let i = 1; i < 15; i++) {\r\n          const handledTx = await eth.getTransaction(txs[len-i]);\r\n\r\n          Object.keys(result.blocks).map(key => {\r\n            if(result.blocks[key].number === handledTx.blockNumber){\r\n              handledTx.timestamp = result.blocks[key].timestamp;\r\n            }\r\n          })\r\n          handledTxs.push(handledTx);\r\n        }\r\n      }\r\n\r\n      this.loading = false;\r\n      this.blocks = result.blocks;\r\n      this.txs = handledTxs;\r\n    }\r\n  },\r\n  beforeDestroy(){\r\n    this.timmer && (this.timmer = null);\r\n  }\r\n};\r\n",{"version":3,"sources":["etheBlocks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"etheBlocks.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <el-container>\r\n      <el-main>\r\n        <el-card>\r\n          <h3  v-text=\"title\"></h3>\r\n          <div class=\"table blocks\">\r\n      <div class=\"table-header\">\r\n        <div class=\"table-row\">\r\n          <div class=\"table-column\">区块高度</div>\r\n          <div class=\"table-column\">首笔交易时间</div>\r\n          <div class=\"table-column\">交易对象数量</div>\r\n          <div class=\"table-column\">矿工</div>\r\n          <div class=\"table-column\">Gas使用量</div>\r\n          <div class=\"table-column\">Gas限额</div>\r\n          <div class=\"table-column\">哈希</div>\r\n          <div class=\"table-column\">随机值</div>\r\n          <div class=\"table-column\">工作量证明哈希值</div>\r\n          <div class=\"table-column\">父区块哈希</div>\r\n          <div class=\"table-column\">收据</div>\r\n          <div class=\"table-column\">区块大小</div>\r\n          <!-- <div class=\"table-column\">Uncles</div>\r\n          <div class=\"table-column\">difficulty</div>\r\n          <div class=\"table-column\">extraData</div>\r\n          <div class=\"table-column\">logsBloom</div>\r\n          <div class=\"table-column\">stateRoot</div>\r\n          <div class=\"table-column\">totalDifficulty</div>\r\n          <div class=\"table-column\">transactionsRoot</div> -->\r\n        </div>\r\n      </div>\r\n      <div v-if=\"loading || blocks.length\" class=\"table-body\" :class=\"`${loading ? 'table-body-loading' : ''}`\">\r\n        <div class=\"table-row\" v-for=\"(block,i) in blocks\" :key=\"`block-${i}`\">\r\n          <div class=\"table-column\" v-text=\"block.number\"></div>\r\n          <div class=\"table-column\" v-text=\"block.timestamp\"></div>\r\n          <div class=\"table-column\" v-text=\"block.txn\"></div>\r\n          <div class=\"table-column\" v-text=\"block.miner\"></div>\r\n          <div class=\"table-column\" v-text=\"block.gasUsed\"></div>\r\n          <div class=\"table-column\" v-text=\"block.gasLimit\"></div>\r\n          <div class=\"table-column\" v-text=\"block.hash\"></div>\r\n          <div class=\"table-column\" v-text=\"block.mixHash\"></div>\r\n          <div class=\"table-column\" v-text=\"block.nonce\"></div>\r\n          <div class=\"table-column\" v-text=\"block.parentHash\"></div>\r\n          <div class=\"table-column\" v-text=\"block.receiptsRoot\"></div>\r\n          <div class=\"table-column\" v-text=\"block.size\"></div>\r\n          <!-- <div class=\"table-column\" v-text=\"block.sha3Uncles\"></div>\r\n          <div class=\"table-column\" v-text=\"block.difficulty\"></div>\r\n          <div class=\"table-column\" v-text=\"block.extraData\"></div>\r\n          <div class=\"table-column\" v-text=\"block.logsBloom\"></div>\r\n          <div class=\"table-column\" v-text=\"block.stateRoot\"></div>\r\n          <div class=\"table-column\" v-text=\"block.totalDifficulty\"></div>\r\n          <div class=\"table-column\" v-text=\"block.transactionsRoot\"></div> -->\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"table-body-nodata\">No data</div>\r\n    </div>\r\n        </el-card>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Web3 from 'web3';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '以太坊最新区块',\r\n      name:'etheBlocks',\r\n      blocks: [],\r\n      txs: [],\r\n      timmer: null,\r\n      loading: true\r\n    };\r\n  },\r\n  created() {\r\n    if (typeof window.web3 !== 'undefined') {\r\n      window.web3 = new Web3(window.web3.currentProvider);\r\n    } else {\r\n      const ethNodeUrl = new Web3.providers.HttpProvider('http://localhost:8545'); // TODO: remote URL\r\n      window.web3 = new Web3(ethNodeUrl);\r\n      console.log(window.web3);\r\n    }\r\n\r\n    // const { eth } = window.web3;\r\n\r\n    // eth.getBlockNumber().then(function(resolve) {\r\n    //   console.log(`getBlockNumber:${resolve}`);\r\n    // });\r\n\r\n    // eth.getAccounts().then(function(resolve) {\r\n    //   console.log(`getAccounts:${resolve}`);\r\n    // });\r\n\r\n    // eth\r\n    //   .getTransactionCount('0x7900681181e87B926A279769538f5325088eAdc1')\r\n    //   .then(function(resolve) {\r\n    //     console.log(`getTransactionCount:${resolve}`);\r\n    //   });\r\n\r\n    // eth.getCoinbase().then(function(resolve) {\r\n    //   console.log(`getCoinbase:${resolve}`);\r\n    // });\r\n\r\n    this.refreshData();\r\n    this.timmer = setInterval(() => {\r\n      this.refreshData();\r\n    }, 60000);\r\n  },\r\n  methods: {\r\n    refreshData(){\r\n      try {\r\n        this.printBlocksAndTxs();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n\r\n    async getBlocksAndTxs() {\r\n      const { eth } = window.web3;\r\n      const blockNumber = await eth.getBlockNumber();\r\n      const blocks = [];\r\n      let txs = [];\r\n\r\n      for (let i = 1; i <= 15; i++) {\r\n        const block = await eth.getBlock(blockNumber-i);\r\n\r\n        block.timestamp = this.$filters.difference(block.timestamp);\r\n        block.txn = block.transactions.length;\r\n\r\n        blocks.push(block);\r\n        txs = txs.concat(block.transactions);\r\n      }\r\n\r\n      return {\r\n        blocks,\r\n        txs\r\n      };\r\n    },\r\n\r\n    async printBlocksAndTxs() {\r\n      const { eth } = window.web3;\r\n      const result = await this.getBlocksAndTxs();\r\n\r\n      const txs = result.txs;\r\n      const handledTxs = [];\r\n\r\n      let len = result.txs.length;\r\n      if (len) {\r\n        for (let i = 1; i < 15; i++) {\r\n          const handledTx = await eth.getTransaction(txs[len-i]);\r\n\r\n          Object.keys(result.blocks).map(key => {\r\n            if(result.blocks[key].number === handledTx.blockNumber){\r\n              handledTx.timestamp = result.blocks[key].timestamp;\r\n            }\r\n          })\r\n          handledTxs.push(handledTx);\r\n        }\r\n      }\r\n\r\n      this.loading = false;\r\n      this.blocks = result.blocks;\r\n      this.txs = handledTxs;\r\n    }\r\n  },\r\n  beforeDestroy(){\r\n    this.timmer && (this.timmer = null);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.subtitle {\r\n  text-align: left;\r\n}\r\n\r\n@table-border: 1px solid #ddd;\r\n\r\n.table {\r\n  border-top: @table-border;\r\n}\r\n.table-header {\r\n  .table-row {\r\n    background-color: #f9f9f9;\r\n    &:hover {\r\n      background-color: #f9f9f9;\r\n    }\r\n  }\r\n}\r\n.table-body-loading{\r\n  background: url(\"../assets/loading.gif\") center center no-repeat;\r\n  background-size: 20px 20px;\r\n  height: 60px;\r\n  overflow: hidden;\r\n}\r\n.table-body-nodata{\r\n  text-align: center;\r\n  padding: 30px;\r\n}\r\n.table-row {\r\n  display: flex;\r\n  border-bottom: @table-border;\r\n  padding: 12px;\r\n  &:hover {\r\n    background-color: #f2f2f2;\r\n  }\r\n}\r\n.table-column {\r\n  flex: 1;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n</style>"]}]}