{"remainingRequest":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/babel-loader/lib/index.js!/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vicky/Downloads/以太坊+eos+比特币/src/components/etheInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/src/components/etheInfo.vue","mtime":1653575682000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/package.json","mtime":1653895453620},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos+比特币/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/vicky/Downloads/\\u4EE5\\u592A\\u574A+eos+\\u6BD4\\u7279\\u5E01/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Web3 from 'web3';\nexport default {\n  name: \"etheInfo\",\n  data: function data() {\n    return {\n      block: null,\n      tableData: []\n    };\n  },\n  mounted: function mounted() {\n    try {\n      this.getBlock();\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  methods: {\n    getBlock: function () {\n      var _getBlock = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var ethNodeUrl, eth, block;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (typeof window.web3 !== 'undefined') {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  ethNodeUrl = new Web3.providers.HttpProvider('http://localhost:8545'); // TODO: remote URL\n\n                  window.web3 = new Web3(ethNodeUrl);\n                  console.log(window.web3);\n                }\n\n                eth = window.web3.eth;\n                _context.next = 4;\n                return eth.getBlock(this.$route.params.heights);\n\n              case 4:\n                block = _context.sent;\n                block.timestamp = this.$filters.difference(block.timestamp);\n                console.log(block.timestamp);\n                this.block = block;\n                this.tableData = [{\n                  attr: '父区块哈希值',\n                  values: block.parentHash\n                }, {\n                  attr: '工作量证明哈希值',\n                  values: block.nonce\n                }, {\n                  attr: '叔区块哈希值',\n                  values: block.sha3Uncles\n                }, {\n                  attr: '交易前缀树根',\n                  values: block.transactionsRoot\n                }, {\n                  attr: '最终状态前缀树根',\n                  values: block.stateRoot\n                }, {\n                  attr: '矿工',\n                  values: block.miner\n                }, {\n                  attr: '难度',\n                  values: block.difficulty\n                }, {\n                  attr: '当前总难度',\n                  values: block.totalDifficulty\n                }, {\n                  attr: '块大小',\n                  values: block.size\n                }, {\n                  attr: '总gas',\n                  values: block.gasLimit\n                }, {\n                  attr: '已用gas',\n                  values: block.gasUsed\n                }, {\n                  attr: '时间戳',\n                  values: block.timestamp\n                }, {\n                  attr: '交易对象数量',\n                  values: block.transactions.length\n                }];\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBlock() {\n        return _getBlock.apply(this, arguments);\n      }\n\n      return getBlock;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;EACAA,gBADA;EAEAC;IACA;MACAC,WADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IACA;MACA;IACA,CAFA,CAEA;MACAC;IACA;EACA,CAdA;EAeAC;IACAC,QADA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEA;kBACAC;gBACA,CAFA,MAEA;kBACAC,UADA,GACA,wDADA,EACA;;kBACAD;kBACAH;gBACA;;gBACAK,GATA,GASAF,WATA,CASAE,GATA;gBAAA;gBAAA,OAUAA,wCAVA;;cAAA;gBAUAR,KAVA;gBAWAA;gBACAG;gBACA;gBACA;kBAAAM;kBAAAC;gBAAA,GACA;kBAAAD;kBAAAC;gBAAA,CADA,EAEA;kBAAAD;kBAAAC;gBAAA,CAFA,EAGA;kBAAAD;kBAAAC;gBAAA,CAHA,EAIA;kBAAAD;kBAAAC;gBAAA,CAJA,EAKA;kBAAAD;kBAAAC;gBAAA,CALA,EAMA;kBAAAD;kBAAAC;gBAAA,CANA,EAOA;kBAAAD;kBAAAC;gBAAA,CAPA,EAQA;kBAAAD;kBAAAC;gBAAA,CARA,EASA;kBAAAD;kBAAAC;gBAAA,CATA,EAUA;kBAAAD;kBAAAC;gBAAA,CAVA,EAWA;kBAAAD;kBAAAC;gBAAA,CAXA,EAYA;kBAAAD;kBAAAC;gBAAA,CAZA;;cAdA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA;AAfA","names":["name","data","block","tableData","mounted","console","methods","getBlock","window","ethNodeUrl","eth","attr","values"],"sourceRoot":"src/components","sources":["etheInfo.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card style=\"margin-top: 20px\">\r\n      <div slot=\"header\" class=\"clearfix\">\r\n        <span>区块信息</span>\r\n      </div>\r\n      <el-row><h3>{{this.block.number}}</h3></el-row>\r\n      <el-row><span>{{this.block.hash}}</span></el-row>\r\n      <el-table\r\n            :data=\"tableData\"\r\n            style=\"width: 100%\">\r\n            <el-table-column\r\n              prop=\"attr\"\r\n              label=\"\"\r\n              width=\"200px\">\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"values\"\r\n              label=\"\">\r\n            </el-table-column>\r\n      </el-table>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import Web3 from 'web3';\r\n  export default {\r\n    name: \"etheInfo\",\r\n    data: function(){\r\n        return {\r\n          block:null,\r\n          tableData: []\r\n        }\r\n      },\r\n    mounted: function () {\r\n      try {\r\n        this.getBlock();\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    },\r\n    methods: {\r\n      async getBlock(){\r\n        if (typeof window.web3 !== 'undefined') {\r\n          window.web3 = new Web3(window.web3.currentProvider);\r\n        } else {\r\n          const ethNodeUrl = new Web3.providers.HttpProvider('http://localhost:8545'); // TODO: remote URL\r\n          window.web3 = new Web3(ethNodeUrl);\r\n          console.log(window.web3);\r\n        }\r\n        const { eth } = window.web3;\r\n        const block = await eth.getBlock(this.$route.params.heights);\r\n        block.timestamp = this.$filters.difference(block.timestamp);\r\n        console.log(block.timestamp)\r\n        this.block = block\r\n        this.tableData = [{attr:'父区块哈希值', values:block.parentHash},\r\n          {attr:'工作量证明哈希值', values:block.nonce},\r\n          {attr:'叔区块哈希值', values:block.sha3Uncles},\r\n          {attr:'交易前缀树根', values:block.transactionsRoot},\r\n          {attr:'最终状态前缀树根', values:block.stateRoot},\r\n          {attr:'矿工', values:block.miner},\r\n          {attr:'难度', values:block.difficulty},\r\n          {attr:'当前总难度', values:block.totalDifficulty},\r\n          {attr:'块大小', values:block.size},\r\n          {attr:'总gas', values:block.gasLimit},\r\n          {attr:'已用gas', values:block.gasUsed},\r\n          {attr:'时间戳', values:block.timestamp},\r\n          {attr:'交易对象数量', values:block.transactions.length}]\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .el-input__inner{\r\n    border-color: #062f4f;\r\n    border-width: 3px;\r\n    border-radius: 6px;\r\n  }\r\n  /deep/el-input::-webkit-input-placeholder{\r\n    color: #062f4f;\r\n  }\r\n  .el-input-group__append button.el-button{\r\n          background-color: #062f4f;\r\n          border-color: #062f4f;\r\n  }\r\n  .el-input-group__append{\r\n    background-color: #062f4f;\r\n    border: #062f4f;\r\n    color: #f2f2f2;\r\n  }\r\n</style>"]}]}