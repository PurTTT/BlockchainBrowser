{"remainingRequest":"/Users/vicky/Downloads/以太坊+eos/node_modules/babel-loader/lib/index.js!/Users/vicky/Downloads/以太坊+eos/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/vicky/Downloads/以太坊+eos/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/vicky/Downloads/以太坊+eos/src/components/bitTransaction.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/vicky/Downloads/以太坊+eos/src/components/bitTransaction.vue","mtime":1654267479844},{"path":"/Users/vicky/Downloads/以太坊+eos/package.json","mtime":1653895453620},{"path":"/Users/vicky/Downloads/以太坊+eos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/vicky/Downloads/以太坊+eos/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/vicky/Downloads/以太坊+eos/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/vicky/Downloads/\\u4EE5\\u592A\\u574A+eos/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Web3 from 'web3';\nexport default {\n  data: function data() {\n    return {\n      title: '比特币最新未确认交易',\n      name: 'etheTransaction',\n      blocks: [],\n      txs: [],\n      timmer: null,\n      loading: true\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.refreshData();\n    this.timmer = setInterval(function () {\n      _this.refreshData();\n    }, 1000000);\n  },\n  methods: {\n    refreshData: function refreshData() {\n      try {\n        this.printBlocksAndTxs();\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    printBlocksAndTxs: function () {\n      var _printBlocksAndTxs = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var mytxs, axios, netUrl, myheaders, myresult;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //axios的定义\n                axios = require('axios');\n                netUrl = \"http://127.0.0.1:5000/bitTx\";\n                myheaders = {\n                  \"Content-Type\": \"application/json\"\n                };\n                _context.next = 5;\n                return axios.post(netUrl).then(function (resp) {\n                  mytxs = resp.data;\n                  console.log('lets go');\n                  console.log(mytxs); //请求内处理结果\n                  //请求处理结果完成\n                }).catch(function (resp) {\n                  console.log(resp);\n                });\n\n              case 5:\n                //axios请求结束\n                myresult = mytxs.txs;\n                console.log(myresult); //   const handledTxs = [];\n                //  var relen = myresult.length;\n                //   let txlen = 0;\n                //   for (let i = 0; i < relen; i++) {txlen += myresult[i].transactions.length;}\n                //    console.log(\"relen\",relen,'txlen',txlen);\n                //   let len = txlen;\n                //   if (len) {\n                // for (let i = 0; i < relen; i++) {\n                //处理格式  \n                //    var tlen = myresult[i].transactions.length;\n                //    console.log(\"处理\",tlen);\n                //    for (let j = 0; j < tlen; j++) {\n                //    \tvar handledTx = {\n                // \t//与块有关\n                // \t'blockHash':myresult[i].id,\n                // \t'blockNumber':myresult[i].block_num,\n                // \t'timestamp':myresult[i].timestamp,\n                // \t//不到trx\n                // \t'net_usage':myresult[i].transactions[j].net_usage_words,\n                // \t'cpu_usage':myresult[i].transactions[j].cpu_usage_us,\n                // \t'status':myresult[i].transactions[j].status,\n                // \t//trx内\n                // \t'hash':myresult[i].transactions[j].trx.id,\n                // \t//transaction.action[0]内\n                // \t'user':myresult[i].transactions[j].trx.transaction.actions[0].account,\n                // \t'action':myresult[i].transactions[j].trx.transaction.actions[0].name,\n                // \t//data内\n                // \t'supplier':myresult[i].transactions[j].trx.transaction.actions[0].data.supplier,\n                // \t'value':myresult[i].transactions[j].trx.transaction.actions[0].data.value\n                // };\n                // handledTxs.push(handledTx);\n                // console.log(handledTx)\n                //一条交易格式处理完成\n                // }\n                // }\n                //   }\n\n                this.loading = false;\n                this.txs = myresult;\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function printBlocksAndTxs() {\n        return _printBlocksAndTxs.apply(this, arguments);\n      }\n\n      return printBlocksAndTxs;\n    }()\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.timmer && (this.timmer = null);\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AAEA;EACAA,IADA,kBACA;IACA;MACAC,mBADA;MAEAC,uBAFA;MAGAC,UAHA;MAIAC,OAJA;MAKAC,YALA;MAMAC;IANA;EAQA,CAVA;EAWAC,OAXA,qBAWA;IAAA;;IAEA;IACA;MACA;IACA,CAFA,EAEA,OAFA;EAGA,CAjBA;EAkBAC;IACAC,WADA,yBACA;MACA;QACA;MACA,CAFA,CAEA;QACAC;MACA;IACA,CAPA;IAUAC,iBAVA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAYA;gBACAC,KAbA,GAaAC,gBAbA;gBAeAC,MAfA,GAeA,6BAfA;gBAgBAC,SAhBA,GAgBA;kBAAA;gBAAA,CAhBA;gBAAA;gBAAA,OAiBAH;kBACAI;kBACAN;kBAEAA,mBAJA,CAMA;kBAEA;gBACA,CATA,EASAO,KATA,CASA;kBACAP;gBACA,CAXA,CAjBA;;cAAA;gBA6BA;gBAGAQ,QAhCA,GAgCAF,SAhCA;gBAiCAN,sBAjCA,CAkCA;gBACA;gBACA;gBACA;gBACA;gBAEA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;;gBAEA;gBACA;;cAzEA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;;MAAA;QAAA;MAAA;;MAAA;IAAA;EAAA,CAlBA;EA8FAS,aA9FA,2BA8FA;IACA;EACA;AAhGA","names":["data","title","name","blocks","txs","timmer","loading","created","methods","refreshData","console","printBlocksAndTxs","axios","require","netUrl","myheaders","mytxs","catch","myresult","beforeDestroy"],"sourceRoot":"src/components","sources":["bitTransaction.vue"],"sourcesContent":["<template>\n  <div>\n    <el-container>\n      <el-main>\n        <el-card>\n          <h3  v-text=\"title\"></h3>\n          <div class=\"table transactions\">\n          <div class=\"table-header\">\n            <div class=\"table-row\">\n                <div class=\"table-column\">交易哈希</div>\n                <!-- <div class=\"table-column\">区块哈希</div> -->\n                <!-- <div class=\"table-column\">区块高度</div> -->\n                <div class=\"table-column\">时间戳</div>\n                <div class=\"table-column\">交易输入数量</div>\n                <div class=\"table-column\">交易输出数量</div>\n                <div class=\"table-column\">交易字节数</div>\n                <div class=\"table-column\">费用</div>\n                <div class=\"table-column\">交易索引</div>\n                <!-- <div class=\"table-column\">交易状态</div> -->\n                <!-- <div class=\"table-column\">action</div> -->\n                <!-- <div class=\"table-column\">in put</div>\n                <div class=\"table-column\">r</div>\n                <div class=\"table-column\">s</div>\n                <div class=\"table-column\">v</div> -->\n            </div>\n          </div>\n        <div v-if=\"loading || txs.length\" class=\"table-body\" :class=\"`${loading ? 'table-body-loading' : ''}`\" >\n          <div class=\"table-row\" v-for=\"(tx,i) in txs\" :key=\"`tx-${i}`\">\n            <div class=\"table-column\" v-text=\"tx.hash\"></div>\n            <!-- <div class=\"table-column\" v-text=\"tx.blockHash\"></div> -->\n            <!-- <div class=\"table-column\" v-text=\"tx.blockNumber\"></div> -->\n            <div class=\"table-column\" v-text=\"new Date(tx.time * 1000)\"></div>\n            <div class=\"table-column\" v-text=\"tx.vin_sz\"></div>\n            <div class=\"table-column\" v-text=\"tx.vout_sz\"></div>\n            <div class=\"table-column\" v-text=\"tx.size\"></div>\n            <div class=\"table-column\" v-text=\"tx.fee\"></div>\n            <div class=\"table-column\" v-text=\"tx.tx_index\"></div>\n            <!-- <div class=\"table-column\" v-text=\"tx.status\"></div> -->\n            <!-- <div class=\"table-column\" v-text=\"tx.action\"></div> -->\n            <!-- <div class=\"table-column\" v-text=\"tx.input\"></div>\n            <div class=\"table-column\" v-text=\"tx.r\"></div>\n            <div class=\"table-column\" v-text=\"tx.s\"></div>\n            <div class=\"table-column\" v-text=\"tx.v\"></div> -->\n          </div>\n        </div>\n        <div v-else class=\"table-body-nodata\">No data</div>\n      </div>\n        </el-card>\n      </el-main>\n    </el-container>\n  </div>\n</template>\n\n<script>\nimport Web3 from 'web3';\n\nexport default {\n  data() {\n    return {\n      title: '比特币最新未确认交易',\n      name:'etheTransaction',\n      blocks: [],\n      txs: [],\n      timmer: null,\n      loading: true\n    };\n  },\n  created() {\n\n    this.refreshData();\n    this.timmer = setInterval(() => {\n      this.refreshData();\n    }, 1000000);\n  },\n  methods: {\n    refreshData(){\n      try {\n        this.printBlocksAndTxs();\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n\n    async printBlocksAndTxs() {\n     var mytxs\n//axios的定义\n      const axios = require('axios');\n      \n      var netUrl = \"http://127.0.0.1:5000/bitTx\"; \n      var myheaders = {\"Content-Type\": \"application/json\"};\n      await axios.post(netUrl).then(resp=>{\n        mytxs=resp.data;\n        console.log('lets go');\n\n        console.log(mytxs);\n\n//请求内处理结果\n\n//请求处理结果完成\n        }).catch(resp=>{\n        console.log(resp);\n        });\n//axios请求结束\n\n\n      const myresult = mytxs.txs;\n        console.log(myresult);\n    //   const handledTxs = [];\n    //  var relen = myresult.length;\n    //   let txlen = 0;\n    //   for (let i = 0; i < relen; i++) {txlen += myresult[i].transactions.length;}\n\t//    console.log(\"relen\",relen,'txlen',txlen);\n\n    //   let len = txlen;\n    //   if (len) {\n        // for (let i = 0; i < relen; i++) {\n//处理格式  \n\t//    var tlen = myresult[i].transactions.length;\n\t//    console.log(\"处理\",tlen);\n        //    for (let j = 0; j < tlen; j++) {\n        //    \tvar handledTx = {\n\t\t// \t//与块有关\n\t\t// \t'blockHash':myresult[i].id,\n\t\t// \t'blockNumber':myresult[i].block_num,\n\t\t// \t'timestamp':myresult[i].timestamp,\n\t\t// \t//不到trx\n\t\t// \t'net_usage':myresult[i].transactions[j].net_usage_words,\n\t\t// \t'cpu_usage':myresult[i].transactions[j].cpu_usage_us,\n\t\t// \t'status':myresult[i].transactions[j].status,\n\t\t// \t//trx内\n  \t\t// \t'hash':myresult[i].transactions[j].trx.id,\n\t\t// \t//transaction.action[0]内\n\t\t// \t'user':myresult[i].transactions[j].trx.transaction.actions[0].account,\n\t\t// \t'action':myresult[i].transactions[j].trx.transaction.actions[0].name,\n\t\t// \t//data内\n\t\t// \t'supplier':myresult[i].transactions[j].trx.transaction.actions[0].data.supplier,\n\t\t// \t'value':myresult[i].transactions[j].trx.transaction.actions[0].data.value\n\t\t// };\n\t\t// handledTxs.push(handledTx);\n\t\t// console.log(handledTx)\n\t\t//一条交易格式处理完成\n\t    // }\n        // }\n    //   }\n\n      this.loading = false;\n      this.txs = myresult;\n    }\n  },\n  beforeDestroy(){\n    this.timmer && (this.timmer = null);\n  }\n};\n</script>\n\n<style lang=\"less\" scoped>\n.subtitle {\n  text-align: left;\n}\n\n@table-border: 1px solid #ddd;\n\n.table {\n  border-top: @table-border;\n}\n.table-header {\n  .table-row {\n    background-color: #f9f9f9;\n    &:hover {\n      background-color: #f9f9f9;\n    }\n  }\n}\n.table-body-loading{\n  background: url(\"../assets/loading.gif\") center center no-repeat;\n  background-size: 20px 20px;\n  height: 60px;\n  overflow: hidden;\n}\n.table-body-nodata{\n  text-align: center;\n  padding: 30px;\n}\n.table-row {\n  display: flex;\n  border-bottom: @table-border;\n  padding: 12px;\n  &:hover {\n    background-color: #f2f2f2;\n  }\n}\n.table-column {\n  flex: 1;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n</style>"]}]}